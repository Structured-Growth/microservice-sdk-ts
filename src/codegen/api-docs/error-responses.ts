export const errorResponses: any = [
	{
		description: "Authentication required",
		name: 401,
		schema: {
			dataType: "refObject",
			properties: [
				{
					name: "code",
					required: true,
					type: { dataType: "double" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "name",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "message",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "stack",
					required: false,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
			],
			refName: "ErrorInterface",
			deprecated: false,
		},
	},
	{
		description: "Permission error",
		name: 403,
		schema: {
			dataType: "refObject",
			properties: [
				{
					name: "code",
					required: true,
					type: { dataType: "double" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "name",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "message",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "stack",
					required: false,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
			],
			refName: "ErrorInterface",
			deprecated: false,
		},
	},
	{
		description: "Resource not found",
		name: 404,
		schema: {
			dataType: "refObject",
			properties: [
				{
					name: "code",
					required: true,
					type: { dataType: "double" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "name",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "message",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "stack",
					required: false,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
			],
			refName: "ErrorInterface",
			deprecated: false,
		},
	},
	{
		description: "Validation failed",
		name: 422,
		schema: {
			dataType: "refObject",
			properties: [
				{
					name: "code",
					required: true,
					type: { dataType: "double" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "name",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "message",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "stack",
					required: false,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "validation",
					required: true,
					type: {
						dataType: "refAlias",
						description: "Construct a type with a set of properties K of type T",
						refName: "Record_string.string-Array_",
						type: {
							dataType: "nestedObjectLiteral",
							properties: [],
							additionalProperties: { dataType: "array", elementType: { dataType: "string" } },
						},
						validators: {},
					},
					validators: {},
					deprecated: false,
					extensions: [],
				},
			],
			refName: "ValidationErrorInterface",
			deprecated: false,
		},
	},
	{
		description: "Unexpected error",
		name: "default",
		schema: {
			dataType: "refObject",
			properties: [
				{
					name: "code",
					required: true,
					type: { dataType: "double" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "name",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "message",
					required: true,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
				{
					name: "stack",
					required: false,
					type: { dataType: "string" },
					validators: {},
					deprecated: false,
					extensions: [],
				},
			],
			refName: "ErrorInterface",
			deprecated: false,
		},
	},
];
